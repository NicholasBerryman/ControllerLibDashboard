/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arduinocontroller.UI;

import arduinocontroller.Comms.ControllerSerialInterface;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.Network;
import net.Network_iface;

/**
 *
 * @author Nicholas Berryman
 */
public class COMSelector extends javax.swing.JFrame {
    public boolean isActive = true;
    private Thread portFindThread;
    private Network portFinder = new Network(new Network_iface(){
        @Override
        public void writeLog(int id, String text) {}
        @Override
        public void parseInput(int id, int numBytes, int[] message) {}
        @Override
        public void networkDisconnected(int id) {} 
    });
    /**
     * Creates new form COMSelector
     */
    public COMSelector() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Arduino port");
        cmbPorts.removeAllItems();
        portFindThread = new Thread(new Runnable(){
            @Override
            public void run() {
                while (isActive){
                    cmbPorts.removeAllItems();
                    for (String portName : portFinder.getPortList())
                        cmbPorts.addItem(portName);
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(COMSelector.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        portFindThread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbPorts = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbPorts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPorts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPortsActionPerformed(evt);
            }
        });

        jLabel1.setText("COM Port:");

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPorts, 0, 290, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPorts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnConfirm)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPortsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPortsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPortsActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        if (cmbPorts.getSelectedIndex() > -1){
            new Dashboard(new ControllerSerialInterface(cmbPorts.getSelectedIndex())).setVisible(true);
            isActive = false;
            this.setVisible(false);
        }
        else
            javax.swing.JOptionPane.showMessageDialog(this, "Error. No available ports found!\nPlease check your Arduino is plugged in.");
    }//GEN-LAST:event_btnConfirmActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JComboBox<String> cmbPorts;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
